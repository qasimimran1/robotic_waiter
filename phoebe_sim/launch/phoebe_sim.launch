<launch>
	<arg name="paused" 				default="false"/>
	<arg name="use_sim_time" 	default="true"/>
	<arg name="gui" 						default="true"/>
	<arg name="headless" 			default="false"/>
	<arg name="debug" 				default="false"/>
	<arg name="x" 						default="2.38" />  <!--2.38 -->
	<arg name="y" 						default="0.0" />  <!-- 0.8  -5.0 -->
	<arg name="z" 							default="0.0" />
	<arg name="roll" 						default="0.000"/>
	<arg name="pitch" 					default="0.000"/>
	<arg name="yaw" 					default="0.0"/>   <!--  -1.5780  -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
	<arg name="world_name" 		value="$(find phoebe_sim)/worlds/my_test3.world"/>  
	<!-- <arg name="world_name" 		value="$(find phoebe_sim)/worlds/demo_world.world"/> -->
	<!-- <arg name="world_name" 		value="$(find phoebe_sim)/worlds/pr2_perception.world"/> -->
	<!-- <arg name="world_name" 		value="$(find phoebe_sim)/worlds/turtlebot_playground.world"/> -->
	<!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/> -->
	<!-- <arg name="world_name" value="$(find phoebe_sim)/worlds/willow_garage.world"/> -->
	<!-- <arg name="world_name" value="$(find phoebe_sim)/worlds/empty_cafe.world"/> -->
	<!-- <arg name="world_name" value="$(find phoebe_sim)/worlds/cafe.world"/> -->
    <!-- <arg name="world_name" 		value="$(find rrbot_gazebo)/worlds/rrbot.world"/> -->
    <arg name="debug" 				value="$(arg debug)" />
    <arg name="gui" 						value="$(arg gui)" />
    <arg name="paused" 				value="$(arg paused)"/>
    <arg name="use_sim_time" 	value="$(arg use_sim_time)"/>
    <arg name="headless" 			value="$(arg headless)"/>
  </include>
  
  <!-- Load PIDs for the joints -->
  <rosparam file="$(find phoebe_sim)/config/pid_gains.yaml" command="load" />

   <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find phoebe_sim)/config/controllers_phoebe.yaml" command="load"/>

  
  
	
  <!-- Load the URDF into the ROS Parameter Server -->  
  <param name="robot_description" 
	command="$(find xacro)/xacro --inorder '$(find phoebe_description)/urdf/phoebe.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model phoebe -param robot_description -x $(arg x) -y $(arg y) -z $(arg z)
		-R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
	
	<!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">		
		<rosparam param="source_list">[/joint_states]</rosparam>
		<param name="rate" value="50"/>  
  </node>
  
  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
	<param name="publish_frequency" value="100.0" />
    <!-- <remap from="/joint_states" to="/phoebe/joint_states" />    -->
  </node>
  
  
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen"  
			args="	joint_state_controller
							left_arm_controller
							right_arm_controller										   
							left_gripper_controller
							right_gripper_controller
							ptu_controller
							wheels_controller
							"/>
  <!-- wheels_controller   dual_arm_controller -->
  
  <!-- both arms down initially -->
  <!-- <node name  = "arms_down" pkg = "phoebe_sim" type = "arms_down.py"/> -->
  <!-- Show in Rviz   -->
  <!-- <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find phoebe_sim)/launch/phoebe.rviz" required="true"/>    -->
  <!--  phoebe_nav.rviz -->


</launch>
